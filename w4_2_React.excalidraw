{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "EEEl2HkD9xasuxXbxsuKw",
      "type": "text",
      "x": 205.10509348092023,
      "y": 59.75877755988023,
      "width": 1039,
      "height": 75,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a1",
      "roundness": null,
      "seed": 1506596640,
      "version": 270,
      "versionNonce": 725789624,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737395603261,
      "link": null,
      "locked": false,
      "text": "The Virtual DOM is a lightweight, in-memory representation of the actual DOM (Document Object Model). \nReact uses this as a performance optimization to minimize direct interactions with the real DOM, which \ncan be slow.",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "The Virtual DOM is a lightweight, in-memory representation of the actual DOM (Document Object Model). \nReact uses this as a performance optimization to minimize direct interactions with the real DOM, which \ncan be slow.",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "KMfPH0naJclx-xe0J3GtE",
      "type": "text",
      "x": 216.85499992199087,
      "y": 26.842124939911912,
      "width": 118,
      "height": 25,
      "angle": 0,
      "strokeColor": "#f08c00",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a9",
      "roundness": null,
      "seed": 1417597728,
      "version": 371,
      "versionNonce": 1464714016,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737182042504,
      "link": null,
      "locked": false,
      "text": "Virtual DOM",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Virtual DOM",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "HIE07gL7_XMWy0bTcuk9e",
      "type": "text",
      "x": 199.43840138293842,
      "y": 163.7587877324063,
      "width": 175,
      "height": 50,
      "angle": 0,
      "strokeColor": "#f08c00",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aB",
      "roundness": null,
      "seed": 1241644768,
      "version": 171,
      "versionNonce": 719871776,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737182042504,
      "link": null,
      "locked": false,
      "text": "RECONCILATION\n",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "RECONCILATION\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "MtNk097ADiN3iCZOcjPDc",
      "type": "text",
      "x": 207.43843190051655,
      "y": 192.7587877324063,
      "width": 1076,
      "height": 50,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aC",
      "roundness": null,
      "seed": 467519264,
      "version": 154,
      "versionNonce": 1758427936,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737182042504,
      "link": null,
      "locked": false,
      "text": "Reconciliation is the process by which React updates the real DOM to match the changes in the Virtual DOM\n. It involves identifying what has changed and applying updates in the most efficient way possible.",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Reconciliation is the process by which React updates the real DOM to match the changes in the Virtual DOM\n. It involves identifying what has changed and applying updates in the most efficient way possible.",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "LwQ1PZHm3-ycMNC3NKL1i",
      "type": "text",
      "x": 182.01659322495158,
      "y": -443.5422508310551,
      "width": 73,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1971c2",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aE",
      "roundness": null,
      "seed": 2013985568,
      "version": 38,
      "versionNonce": 967737498,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737478406956,
      "link": null,
      "locked": false,
      "text": "REACT",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "REACT",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "NzwgGU7SlQtTe155Zh5Pd",
      "type": "text",
      "x": 183.84652573724225,
      "y": -416.62196799188246,
      "width": 1060,
      "height": 100,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aH",
      "roundness": null,
      "seed": 1437058848,
      "version": 141,
      "versionNonce": 1971533530,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737478404480,
      "link": null,
      "locked": false,
      "text": "React is an efficient, flexible, and developer-friendly tool for building modern, dynamic web applications. \nIt simplifies the process of creating and maintaining UIs, offers excellent performance through Virtual DOM\n and reconciliation, and has a thriving ecosystem to support projects of any scale.\nIt has a component based arch which organises the Web UI into modular and reusable components",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "React is an efficient, flexible, and developer-friendly tool for building modern, dynamic web applications. \nIt simplifies the process of creating and maintaining UIs, offers excellent performance through Virtual DOM\n and reconciliation, and has a thriving ecosystem to support projects of any scale.\nIt has a component based arch which organises the Web UI into modular and reusable components",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "g7_pbCivkvAo81kPfYSXX",
      "type": "text",
      "x": 217.85845255774515,
      "y": -290.99768506046513,
      "width": 54,
      "height": 25,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aK",
      "roundness": null,
      "seed": 248101600,
      "version": 10,
      "versionNonce": 756711136,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737181623033,
      "link": null,
      "locked": false,
      "text": "VITE",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "VITE",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "muv3yDZuSjYbxB8nThB_0",
      "type": "text",
      "x": 197.74931350138232,
      "y": -255.70516956908938,
      "width": 1211,
      "height": 250,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aN",
      "roundness": null,
      "seed": 1741631200,
      "version": 90,
      "versionNonce": 1267857184,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737182061139,
      "link": null,
      "locked": false,
      "text": "React: A library/framework used to build user interfaces (UI).\nVite: A toolchain that facilitates building modern web applications (including React apps) by handling development and\n production builds.\nVite is neither a framework like React nor just a compiler. Instead, Vite is a modern frontend build tool that acts as both \na development server and a production bundler. Here's a breakdown:\nProduction Bundler\nFor production, Vite bundles your application using Rollup, creating highly optimized and efficient output files.\nThis bundling process includes optimizations like tree-shaking, code splitting, and minification.\nHot Module Replacement (HMR) is a feature in modern web development tools (like Vite, Webpack, etc.) that allows you to \nupdate parts of your application in real-time without refreshing the entire page.",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "React: A library/framework used to build user interfaces (UI).\nVite: A toolchain that facilitates building modern web applications (including React apps) by handling development and\n production builds.\nVite is neither a framework like React nor just a compiler. Instead, Vite is a modern frontend build tool that acts as both \na development server and a production bundler. Here's a breakdown:\nProduction Bundler\nFor production, Vite bundles your application using Rollup, creating highly optimized and efficient output files.\nThis bundling process includes optimizations like tree-shaking, code splitting, and minification.\nHot Module Replacement (HMR) is a feature in modern web development tools (like Vite, Webpack, etc.) that allows you to \nupdate parts of your application in real-time without refreshing the entire page.",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "g1edScy-S7jifMrBYKSr8",
      "type": "line",
      "x": 686.5236202223662,
      "y": -58.93593227153718,
      "width": 427.4986106295156,
      "height": 3.1666442951980116,
      "angle": 0,
      "strokeColor": "#f08c00",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aQ",
      "roundness": {
        "type": 2
      },
      "seed": 1019282144,
      "version": 157,
      "versionNonce": 1706611424,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737182027140,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          427.4986106295156,
          3.1666442951980116
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": null
    },
    {
      "id": "2truF2RVJ7NcY8133kzS1",
      "type": "text",
      "x": 209.59057493772866,
      "y": 259.5628599005994,
      "width": 47,
      "height": 25,
      "angle": 0,
      "strokeColor": "#f08c00",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aR",
      "roundness": null,
      "seed": 97347360,
      "version": 6,
      "versionNonce": 1760097056,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737182231361,
      "link": null,
      "locked": false,
      "text": ">JSX",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": ">JSX",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "cqnR54TyqjQ3ET7zOgFHb",
      "type": "text",
      "x": 211.46706088003418,
      "y": 292.7141497252019,
      "width": 1198.4791259765625,
      "height": 125,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aT",
      "roundness": null,
      "seed": 1759068960,
      "version": 22,
      "versionNonce": 542706632,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737395603261,
      "link": null,
      "locked": false,
      "text": "A .jsx file is a JavaScript file that uses JSX (JavaScript XML) syntax. JSX is a syntax extension for JavaScript, primarily \nused with React, that allows you to write HTML-like code within your JavaScript. These files make it easier to build \nReact components by combining the structure (HTML-like) and logic (JavaScript) in one place.\n\n",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "A .jsx file is a JavaScript file that uses JSX (JavaScript XML) syntax. JSX is a syntax extension for JavaScript, primarily \nused with React, that allows you to write HTML-like code within your JavaScript. These files make it easier to build \nReact components by combining the structure (HTML-like) and logic (JavaScript) in one place.\n\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "cgMzYMIiYC4v38xVYk7n-",
      "type": "text",
      "x": 183.13199671451798,
      "y": 420.14819274614774,
      "width": 165.2798614501953,
      "height": 50,
      "angle": 0,
      "strokeColor": "#e03131",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aY",
      "roundness": null,
      "seed": 1776145579,
      "version": 41,
      "versionNonce": 1309636229,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737302307783,
      "link": null,
      "locked": false,
      "text": "Jargons in React\nComponents",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Jargons in React\nComponents",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "MKuk-cnPFPF58KsMLHxPw",
      "type": "text",
      "x": 183.13199671451798,
      "y": 471.81485941281437,
      "width": 1126.659423828125,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ac",
      "roundness": null,
      "seed": 355387813,
      "version": 151,
      "versionNonce": 41227141,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737302430191,
      "link": null,
      "locked": false,
      "text": "How a Dom element should render given the state,it is reusable dynamic , HTML smippet that changes given a state",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "How a Dom element should render given the state,it is reusable dynamic , HTML smippet that changes given a state",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "1NCJOr2IrGLtBGDi_MzTS",
      "type": "text",
      "x": 186.4653300478513,
      "y": 538.4815260794811,
      "width": 1143.6993408203125,
      "height": 50,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "af",
      "roundness": null,
      "seed": 390809003,
      "version": 152,
      "versionNonce": 1204649003,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737302585889,
      "link": null,
      "locked": false,
      "text": "A js object that represents the current state of the application, it represents  the dynamic props of our application\n ",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "A js object that represents the current state of the application, it represents  the dynamic props of our application\n ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "PHnvOdEoHr8Dd2UW6pp02",
      "type": "text",
      "x": 191.46533004785132,
      "y": 513.4815260794811,
      "width": 58.07997131347656,
      "height": 25,
      "angle": 0,
      "strokeColor": "#e03131",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ai",
      "roundness": null,
      "seed": 48591557,
      "version": 28,
      "versionNonce": 266467493,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737302604202,
      "link": null,
      "locked": false,
      "text": "State",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "State",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "70HeleAeP4cDDkNq-zHPF",
      "type": "text",
      "x": 194.79866338118464,
      "y": 580.1481927461477,
      "width": 94.27992248535156,
      "height": 25,
      "angle": 0,
      "strokeColor": "#e03131",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aj",
      "roundness": null,
      "seed": 986347749,
      "version": 37,
      "versionNonce": 1054233579,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737302869483,
      "link": null,
      "locked": false,
      "text": "ReRender",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "ReRender",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "1jMO6F45rO86zDDrVoZV7",
      "type": "text",
      "x": 196.46533004785127,
      "y": 613.4815260794811,
      "width": 1358.0391845703125,
      "height": 75,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "an",
      "roundness": null,
      "seed": 1421272139,
      "version": 344,
      "versionNonce": 635758280,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737388702320,
      "link": null,
      "locked": false,
      "text": "A state change triggers a rerender  for the component , a re render represent the actual DOM being manipukated when the state changes.\nReact handles the work automatic re rendering the comp if its or its parents state changes \n",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "A state change triggers a rerender  for the component , a re render represent the actual DOM being manipukated when the state changes.\nReact handles the work automatic re rendering the comp if its or its parents state changes \n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "l0pa7pGZNBoPhvZrEL6Ug",
      "type": "text",
      "x": 196.46533004785113,
      "y": 706.8148594128145,
      "width": 380.2998046875,
      "height": 25,
      "angle": 0,
      "strokeColor": "#f08c00",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ao",
      "roundness": null,
      "seed": 441274552,
      "version": 51,
      "versionNonce": 380269768,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737388357393,
      "link": null,
      "locked": false,
      "text": "Why Component return TOPLEVEL xml?",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Why Component return TOPLEVEL xml?",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "RM_CSW7YSXEfjJil4fRza",
      "type": "text",
      "x": 194.7986633811845,
      "y": 761.8148594128145,
      "width": 255.2598419189453,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ap",
      "roundness": null,
      "seed": 1157664184,
      "version": 45,
      "versionNonce": 1337125832,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737388511844,
      "link": null,
      "locked": false,
      "text": "!. easy to do reconcilation",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "!. easy to do reconcilation",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "AaquYJZ1NnM5xAnBhGU8J",
      "type": "text",
      "x": 189.7986633811845,
      "y": 798.1481927461477,
      "width": 236.95985412597656,
      "height": 25,
      "angle": 0,
      "strokeColor": "#f08c00",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aq",
      "roundness": null,
      "seed": 345324984,
      "version": 115,
      "versionNonce": 1622100152,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737388610017,
      "link": null,
      "locked": false,
      "text": "React.Fragment <></> : ",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "React.Fragment <></> : ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "14vh4dDBN5IUg3WI2Ipm3",
      "type": "text",
      "x": 424.7986633811844,
      "y": 798.4815260794812,
      "width": 1019.0394287109375,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ar",
      "roundness": null,
      "seed": 841601208,
      "version": 228,
      "versionNonce": 1721118408,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737388652643,
      "link": null,
      "locked": false,
      "text": "Help developers to get rid of the extra DOM element wrapping the components together as a single XML",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Help developers to get rid of the extra DOM element wrapping the components together as a single XML",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "0adTR36ZqVsE04wo0HdDK",
      "type": "text",
      "x": 196.46533004785113,
      "y": 828.4815260794811,
      "width": 1280.999267578125,
      "height": 50,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "at",
      "roundness": null,
      "seed": 1334208696,
      "version": 209,
      "versionNonce": 1735043768,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737388922856,
      "link": null,
      "locked": false,
      "text": "As a good developer we need to minimise the no of re renders in our dynamic websites. So always define the state variables in the \n:LCA component",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "As a good developer we need to minimise the no of re renders in our dynamic websites. So always define the state variables in the \n:LCA component",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "HwSrL3TiJl6YdYes4DWhy",
      "type": "line",
      "x": 194.7986633811845,
      "y": 878.4815260794811,
      "width": 141.66666666666663,
      "height": 0,
      "angle": 0,
      "strokeColor": "#1971c2",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "ay",
      "roundness": {
        "type": 2
      },
      "seed": 1782495944,
      "version": 80,
      "versionNonce": 399044552,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737388927322,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          141.66666666666663,
          0
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": null
    },
    {
      "id": "oEOzdOAmpbcnk0Dp0uWIp",
      "type": "text",
      "x": 206.46533004785113,
      "y": 898.4815260794811,
      "width": 138.83990478515625,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1971c2",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b00",
      "roundness": null,
      "seed": 909757112,
      "version": 26,
      "versionNonce": 798755768,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737389218385,
      "link": null,
      "locked": false,
      "text": "Prop Drilling : ",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Prop Drilling : ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "xOrxRh9gft_6soOn_8NxF",
      "type": "text",
      "x": 198.13199671451787,
      "y": 930.1481927461477,
      "width": 1272.89892578125,
      "height": 50,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b01",
      "roundness": null,
      "seed": 482215608,
      "version": 119,
      "versionNonce": 1109238456,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737389250063,
      "link": null,
      "locked": false,
      "text": "Prop drilling is a term used in software development, particularly in React, to describe the process of passing data from a parent \ncomponent to a deeply nested child component through multiple intermediate components.",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Prop drilling is a term used in software development, particularly in React, to describe the process of passing data from a parent \ncomponent to a deeply nested child component through multiple intermediate components.",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "-zTovgeWUoT-Sn6RnKd76",
      "type": "text",
      "x": 318.13199671451775,
      "y": 990.1481927461477,
      "width": 1027.29931640625,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b02",
      "roundness": null,
      "seed": 278945992,
      "version": 187,
      "versionNonce": 1256089544,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737392960501,
      "link": null,
      "locked": false,
      "text": ": memo lets you skip rerendering for a comp if its props are unchanged even if the parents state changes",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": ": memo lets you skip rerendering for a comp if its props are unchanged even if the parents state changes",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "BIYff-dZFcIL0SuprSHB0",
      "type": "text",
      "x": 186.46533,
      "y": 1036.8148594128145,
      "width": 399.6797791005855,
      "height": 25.000000002993094,
      "angle": 0,
      "strokeColor": "#f08c00",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b03",
      "roundness": null,
      "seed": 589815736,
      "version": 61,
      "versionNonce": 1759467208,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737389978694,
      "link": null,
      "locked": false,
      "text": "Each child in a list must have unique KEY",
      "fontSize": 20.000000002394472,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Each child in a list must have unique KEY",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "Ak-2KWUJPj6wHL5kadbUu",
      "type": "text",
      "x": 166.46533004785124,
      "y": 1063.481526079481,
      "width": 1294.779052734375,
      "height": 75,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b05",
      "roundness": null,
      "seed": 302755768,
      "version": 177,
      "versionNonce": 1222354872,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737390153724,
      "link": null,
      "locked": false,
      "text": " \"Each child in a list must have a unique 'key'\" appears in React when you render a list of elements without assigning unique keys to\n each child in the list. Keys are essential in React to help efficiently update and manage the DOM when the list data changes.\nIf u dont pass them react might not distinguish b/w your list items efficiently and lead to unneccesary rerenders.",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": " \"Each child in a list must have a unique 'key'\" appears in React when you render a list of elements without assigning unique keys to\n each child in the list. Keys are essential in React to help efficiently update and manage the DOM when the list data changes.\nIf u dont pass them react might not distinguish b/w your list items efficiently and lead to unneccesary rerenders.",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "GlNEbu_woNQLGLp7y0IYu",
      "type": "text",
      "x": 169.7986633811845,
      "y": 1165.1481927461477,
      "width": 197.1598663330078,
      "height": 25,
      "angle": 0,
      "strokeColor": "#f08c00",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b06",
      "roundness": null,
      "seed": 1414400952,
      "version": 23,
      "versionNonce": 345600440,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737390179595,
      "link": null,
      "locked": false,
      "text": "Wrapper Components",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Wrapper Components",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "2XtiFCsmnTunO4IHZwVqQ",
      "type": "text",
      "x": 174.7986633811846,
      "y": 1200.1481927461477,
      "width": 1369.0191650390625,
      "height": 100,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b07",
      "roundness": null,
      "seed": 967650488,
      "version": 81,
      "versionNonce": 1424495288,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737390367959,
      "link": null,
      "locked": false,
      "text": "A Wrapper Component in React is a component whose primary purpose is to \"wrap\" its children and provide additional structure, functionality\n, or styling. It doesn't render its own content but instead acts as a container for other components or elements.\nStyling or Layout: Apply consistent styles or layout to children.\nLogic and Functionality: Add shared functionality like error handling, authentication checks, or state management.",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "A Wrapper Component in React is a component whose primary purpose is to \"wrap\" its children and provide additional structure, functionality\n, or styling. It doesn't render its own content but instead acts as a container for other components or elements.\nStyling or Layout: Apply consistent styles or layout to children.\nLogic and Functionality: Add shared functionality like error handling, authentication checks, or state management.",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "33DLF9j10zov6OvyDZIDV",
      "type": "text",
      "x": 176.46533004785113,
      "y": 1321.8148594128145,
      "width": 57.11997985839844,
      "height": 25,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b08",
      "roundness": null,
      "seed": 1726832568,
      "version": 14,
      "versionNonce": 44061880,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737390548525,
      "link": null,
      "locked": false,
      "text": "Hooks",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Hooks",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "-ba260E22Uj_50hmDJDwu",
      "type": "text",
      "x": 168.13199671451787,
      "y": 1345.1481927461475,
      "width": 1381.4390869140625,
      "height": 50,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b09",
      "roundness": null,
      "seed": 919494856,
      "version": 335,
      "versionNonce": 1078678712,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737392193803,
      "link": null,
      "locked": false,
      "text": "React hooks are function with prefix \"use' that are used to hook into REact state logic &  lifecyle event features of function components, \nthat was possible only with the class member functions earlier.",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "React hooks are function with prefix \"use' that are used to hook into REact state logic &  lifecyle event features of function components, \nthat was possible only with the class member functions earlier.",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "ax0GtsdYzm_QbdlSBtpvj",
      "type": "text",
      "x": 168.13199671451787,
      "y": 1393.481526079481,
      "width": 1349.69921875,
      "height": 175,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0B",
      "roundness": null,
      "seed": 2140713400,
      "version": 386,
      "versionNonce": 870419896,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737392196858,
      "link": null,
      "locked": false,
      "text": "useEffect  : React hook used usually when a state in its dependency array changes. useEffect is a React hook that allows you to handle\n side effects in functional components. Side effects include things like data fetching, subscriptions, DOM manipulation, timers, and more. \nuseEffect replaces lifecycle methods like componentDidMount, componentDidUpdate, and componentWillUnmount from class components\nReact re-runs the effect if any dependency changes.\n[]: Effect runs only once after the initial render (like componentDidMount).\n[value1, value2]: Effect runs whenever value1 or value2 changes.\n    If omitted, the effect runs after every render.  Can't find async function to useEffect() use useAsyncEffect()",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "useEffect  : React hook used usually when a state in its dependency array changes. useEffect is a React hook that allows you to handle\n side effects in functional components. Side effects include things like data fetching, subscriptions, DOM manipulation, timers, and more. \nuseEffect replaces lifecycle methods like componentDidMount, componentDidUpdate, and componentWillUnmount from class components\nReact re-runs the effect if any dependency changes.\n[]: Effect runs only once after the initial render (like componentDidMount).\n[value1, value2]: Effect runs whenever value1 or value2 changes.\n    If omitted, the effect runs after every render.  Can't find async function to useEffect() use useAsyncEffect()",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "XPbDCaqv_7hd4cNHM5b40",
      "type": "text",
      "x": 188.13199671451787,
      "y": 990.1481927461476,
      "width": 132.61993408203125,
      "height": 25,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0E",
      "roundness": null,
      "seed": 1819715256,
      "version": 48,
      "versionNonce": 1225199048,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737392929154,
      "link": null,
      "locked": false,
      "text": "REACT.memo ",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "REACT.memo ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "yUImrQM_TZ5dOMz0KjbLc",
      "type": "text",
      "x": 168.13199671451787,
      "y": 1583.4815260794812,
      "width": 83.87994384765625,
      "height": 25,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0F",
      "roundness": null,
      "seed": 680991944,
      "version": 24,
      "versionNonce": 904016824,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737393601119,
      "link": null,
      "locked": false,
      "text": "useMemo",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "useMemo",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "j8J87HJhT3IhmgOcIoktz",
      "type": "text",
      "x": 166.46533004785124,
      "y": 1606.8148594128143,
      "width": 1339.25927734375,
      "height": 50,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0H",
      "roundness": null,
      "seed": 716136904,
      "version": 48,
      "versionNonce": 1065637048,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737393606383,
      "link": null,
      "locked": false,
      "text": "The useMemo hook memoizes the result of a computation. It re-computes the value only when one of its dependencies changes, avoiding \nunnecessary recalculations.",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "The useMemo hook memoizes the result of a computation. It re-computes the value only when one of its dependencies changes, avoiding \nunnecessary recalculations.",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "ksZVuDZlvzJJG33nQ6tsH",
      "type": "text",
      "x": 170.7986633811845,
      "y": 1676.148192746148,
      "width": 109.35990905761719,
      "height": 25,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0J",
      "roundness": null,
      "seed": 848219848,
      "version": 81,
      "versionNonce": 186611896,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737395696001,
      "link": null,
      "locked": false,
      "text": "useCallback",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "useCallback",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "j7gkGGFSw2VhNTpUG0SQL",
      "type": "text",
      "x": 170.46533004785113,
      "y": 1703.148192746148,
      "width": 1325.678955078125,
      "height": 50,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0K",
      "roundness": null,
      "seed": 1188284600,
      "version": 186,
      "versionNonce": 1795508664,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737395691234,
      "link": null,
      "locked": false,
      "text": "The useCallback hook memoizes a function across re renders. It ensures the same function reference is returned across renders unless \none of its dependencies changes.Especial;ly in case while passing a function as prop to a child component .",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "The useCallback hook memoizes a function across re renders. It ensures the same function reference is returned across renders unless \none of its dependencies changes.Especial;ly in case while passing a function as prop to a child component .",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "R49W_0VgV7aSJ2AM2ZQiI",
      "type": "text",
      "x": 171.53679431618968,
      "y": 1769.3421249399119,
      "width": 1183.09912109375,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0M",
      "roundness": null,
      "seed": 60356536,
      "version": 168,
      "versionNonce": 1831048646,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737477280905,
      "link": null,
      "locked": false,
      "text": "Async nature setState : causes problem if it is repeatedly called, as in case of consicutively increasing the state by one ",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Async nature setState : causes problem if it is repeatedly called, as in case of consicutively increasing the state by one ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "DOWw1REJtXNB5MJjiUqjI",
      "type": "text",
      "x": 174.85499992199084,
      "y": 1812.3421249399119,
      "width": 68.01994323730469,
      "height": 25,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0N",
      "roundness": null,
      "seed": 202782136,
      "version": 28,
      "versionNonce": 1927950280,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737397218817,
      "link": null,
      "locked": false,
      "text": "useRef",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "useRef",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "Ch5T_CDjGDuwj5vVnDEKz",
      "type": "text",
      "x": 173.85499992199084,
      "y": 1853.3421249399119,
      "width": 1267.138916015625,
      "height": 125,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0O",
      "roundness": null,
      "seed": 539035592,
      "version": 43,
      "versionNonce": 275904440,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737397297157,
      "link": null,
      "locked": false,
      "text": "useRef is a React Hook that provides a way to persist values across renders without causing a re-render. It is primarily used to:\nAccess and manipulate DOM elements directly.\nMaintain mutable references to values or objects.\nref.current holds the current value.\nThe value of ref.current is mutable and persists across renders.",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "useRef is a React Hook that provides a way to persist values across renders without causing a re-render. It is primarily used to:\nAccess and manipulate DOM elements directly.\nMaintain mutable references to values or objects.\nref.current holds the current value.\nThe value of ref.current is mutable and persists across renders.",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "-IPILyZMRSGOLP0IIbqL2",
      "type": "text",
      "x": 172.39541149214512,
      "y": 1998.0719191548349,
      "width": 37.99998474121094,
      "height": 25,
      "angle": 0,
      "strokeColor": "#f08c00",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0P",
      "roundness": null,
      "seed": 2008528026,
      "version": 33,
      "versionNonce": 801338266,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1737476447330,
      "link": null,
      "locked": false,
      "text": "SPA",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "SPA",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "HBPFQZ0ivLT20aDPjTRL0",
      "type": "text",
      "x": 168.4407946747416,
      "y": 2031.0270592998638,
      "width": 1387.69921875,
      "height": 100,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0R",
      "roundness": null,
      "seed": 764337562,
      "version": 505,
      "versionNonce": 2062491290,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1737476551112,
      "link": null,
      "locked": false,
      "text": "In react SPA is an app that loads a single HTML page & dynamically updates it as the user interacts with the app, INstead of navigation to \nseparate HTML files for diff views or pages , a spa relies on client side routing to display the content based on the URL \nchanges , all without hard reloading the entire page (refetching from the backend)\n",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "In react SPA is an app that loads a single HTML page & dynamically updates it as the user interacts with the app, INstead of navigation to \nseparate HTML files for diff views or pages , a spa relies on client side routing to display the content based on the URL \nchanges , all without hard reloading the entire page (refetching from the backend)\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "jiEuidwRIpaW2COLP3mR2",
      "type": "text",
      "x": 160.53156103993499,
      "y": 2129.8924797349505,
      "width": 1359.1790771484375,
      "height": 75,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0U",
      "roundness": null,
      "seed": 1216610438,
      "version": 46,
      "versionNonce": 1734774618,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1737477623157,
      "link": null,
      "locked": false,
      "text": "REACT-router-dom  :React Router DOM is a library used in React applications to manage and navigate between different routes or pages \nwithin the application. It enables single-page applications (SPAs) to \ndynamically render components based on the URL path, without reloading the page. ",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "REACT-router-dom  :React Router DOM is a library used in React applications to manage and navigate between different routes or pages \nwithin the application. It enables single-page applications (SPAs) to \ndynamically render components based on the URL path, without reloading the page. ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "Nz70CKxAZwUC0whf2pSE2",
      "type": "text",
      "x": 165.8043834631396,
      "y": 2222.166872141031,
      "width": 323.3997802734375,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0V",
      "roundness": null,
      "seed": 713496986,
      "version": 130,
      "versionNonce": 1240711622,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1737477614461,
      "link": null,
      "locked": false,
      "text": "Ways to Client side navigation  : ",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Ways to Client side navigation  : ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "-S405mtUxf8r3qouycNd0",
      "type": "text",
      "x": 161.84976664573614,
      "y": 2255.1220122860605,
      "width": 1413.559326171875,
      "height": 75,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0X",
      "roundness": null,
      "seed": 561849542,
      "version": 427,
      "versionNonce": 2065308422,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1737477619043,
      "link": null,
      "locked": false,
      "text": "Using window.location.href\nNot optimal because it hard reloads th whole page with a new location as if someone is fetching that url from the browser, so the spa benefits \nof REACT become futile/impractical",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Using window.location.href\nNot optimal because it hard reloads th whole page with a new location as if someone is fetching that url from the browser, so the spa benefits \nof REACT become futile/impractical",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "tdHYZPMrGirqBjNU1FyCz",
      "type": "text",
      "x": 163.16797225153732,
      "y": 2338.1689654515335,
      "width": 194.17987060546875,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1971c2",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0Y",
      "roundness": null,
      "seed": 656404698,
      "version": 125,
      "versionNonce": 1341517894,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1737477617855,
      "link": null,
      "locked": false,
      "text": "Usenavigate() hook:",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Usenavigate() hook:",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "8Kd1EnAECDZrqVT-wUfIw",
      "type": "text",
      "x": 159.2133554341338,
      "y": 2371.124105596562,
      "width": 960.6993408203125,
      "height": 50,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0a",
      "roundness": null,
      "seed": 1288894150,
      "version": 336,
      "versionNonce": 1564938054,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1737477616215,
      "link": null,
      "locked": false,
      "text": "Can be used inside components only which are children or ascendants of the <Browserrouter> only.\nDon't hard reloads the website while changing bw routes ",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Can be used inside components only which are children or ascendants of the <Browserrouter> only.\nDon't hard reloads the website while changing bw routes ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "42hOgg5_9wntKPchTEzhe",
      "type": "text",
      "x": 163.1679722515373,
      "y": 2521.3995446578947,
      "width": 138.6798858642578,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1971c2",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0b",
      "roundness": null,
      "seed": 385815130,
      "version": 112,
      "versionNonce": 487634586,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1737478030837,
      "link": null,
      "locked": false,
      "text": "Lazy Loading: ",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Lazy Loading: ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "5nKPIGZfKgBCQQJw59-bY",
      "type": "text",
      "x": 157.89514982833268,
      "y": 2542.4908343507136,
      "width": 1363.919189453125,
      "height": 150,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0d",
      "roundness": null,
      "seed": 1346283418,
      "version": 149,
      "versionNonce": 2101331226,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1737478619955,
      "link": null,
      "locked": false,
      "text": "Lazy Loading is a design pattern that defers the loading of resources or components until they are needed. In React, lazy loading is often\n used to optimize the loading performance of a web application by splitting the application into smaller chunks (code-splitting) and loading \nthese chunks on-demand.\nClient will get the js bundle from the backend piece by piece\nconst About = React.lazy(() => import('./About'));\n",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Lazy Loading is a design pattern that defers the loading of resources or components until they are needed. In React, lazy loading is often\n used to optimize the loading performance of a web application by splitting the application into smaller chunks (code-splitting) and loading \nthese chunks on-demand.\nClient will get the js bundle from the backend piece by piece\nconst About = React.lazy(() => import('./About'));\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "gEtsx5Nez7NCcDE7Yh-SR",
      "type": "text",
      "x": 158.3524293548841,
      "y": 2441.671058762036,
      "width": 118.87989807128906,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1971c2",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0h",
      "roundness": null,
      "seed": 1946184922,
      "version": 193,
      "versionNonce": 46249690,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1737478040972,
      "link": null,
      "locked": false,
      "text": "Using <Link>",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Using <Link>",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "izyRKl3EyeHw5TYRAzdMo",
      "type": "text",
      "x": 156.57694422253155,
      "y": 2464.7167036084456,
      "width": 1397.0791015625,
      "height": 50,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0i",
      "roundness": null,
      "seed": 1907768282,
      "version": 303,
      "versionNonce": 486804250,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1737478046173,
      "link": null,
      "locked": false,
      "text": "Using link we can navigate to pages while maintaining the SPA nature of our application. But Onclick Navigation.        <Link to=\"/\">Home</Link>\n",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Using link we can navigate to pages while maintaining the SPA nature of our application. But Onclick Navigation.        <Link to=\"/\">Home</Link>\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "RccvFST-wX7pHjBtn85Vl",
      "type": "text",
      "x": 160.1830999790694,
      "y": 2690.810609939392,
      "width": 135.3398895263672,
      "height": 25,
      "angle": 0,
      "strokeColor": "#e03131",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0j",
      "roundness": null,
      "seed": 610401690,
      "version": 93,
      "versionNonce": 830616666,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1737478699215,
      "link": null,
      "locked": false,
      "text": "Suspense API",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Suspense API",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "2mOimtdPuXo4-LtaxgPg5",
      "type": "text",
      "x": 160.8043834631396,
      "y": 2721.053700235157,
      "width": 1465.339111328125,
      "height": 50,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0k",
      "roundness": null,
      "seed": 886793286,
      "version": 370,
      "versionNonce": 849326278,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1737478784866,
      "link": null,
      "locked": false,
      "text": "It works with the lazy loading by allowing developers to suspend rendering until the component is Ready and completely fetched from the backend, it \nhas fallback:  UI to be displayed while the component is not yet fetched",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "It works with the lazy loading by allowing developers to suspend rendering until the component is Ready and completely fetched from the backend, it \nhas fallback:  UI to be displayed while the component is not yet fetched",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "TDGF1kuYDk0bA9IPNNWhW",
      "type": "text",
      "x": 161.27486610905666,
      "y": 2784.1572590324945,
      "width": 126.25993347167969,
      "height": 25,
      "angle": 0,
      "strokeColor": "#e03131",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0l",
      "roundness": null,
      "seed": 1057736730,
      "version": 43,
      "versionNonce": 257446682,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1737478974263,
      "link": null,
      "locked": false,
      "text": "Context API",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Context API",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "rj0V7w_4OvlX6d7m7kMFW",
      "type": "text",
      "x": 160.32248515667587,
      "y": 2816.5382114134463,
      "width": 1475.09912109375,
      "height": 75,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0m",
      "roundness": null,
      "seed": 399417222,
      "version": 580,
      "versionNonce": 1025307462,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1737479691825,
      "link": null,
      "locked": false,
      "text": "It lets you to get rid of the prop drilling through multiple intermediate nodes which could make the code syntactically verbose and unclear, by direct\nly teleporting the variables to the target children components.  It is used to make the syntax look more cleaner and less verbose not any performance\nimprovement ",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "It lets you to get rid of the prop drilling through multiple intermediate nodes which could make the code syntactically verbose and unclear, by direct\nly teleporting the variables to the target children components.  It is used to make the syntax look more cleaner and less verbose not any performance\nimprovement ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "uz5cuWA0kjmGIbgcuqyaL",
      "type": "text",
      "x": 182.19597907023862,
      "y": 2897.728687603924,
      "width": 372.82361676969373,
      "height": 336.6734693877558,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0o",
      "roundness": null,
      "seed": 1751724698,
      "version": 654,
      "versionNonce": 972984218,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1737479740668,
      "link": null,
      "locked": false,
      "text": "import React, { createContext, useContext } from 'react';\n\n// 1. Create the Context\nconst UserContext = createContext();\n\nfunction App() {\n  const user = { name: 'Harshit', email: 'harshit@example.com' };\n\n  return (\n    // 2. Provide the Context value\n    <UserContext.Provider value={user}>\n      <div>\n        <h1>Context API Example</h1>\n        <Parent />\n      </div>\n    </UserContext.Provider>\n  );\n}\n",
      "fontSize": 13.125671321160068,
      "fontFamily": 6,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "import React, { createContext, useContext } from 'react';\n\n// 1. Create the Context\nconst UserContext = createContext();\n\nfunction App() {\n  const user = { name: 'Harshit', email: 'harshit@example.com' };\n\n  return (\n    // 2. Provide the Context value\n    <UserContext.Provider value={user}>\n      <div>\n        <h1>Context API Example</h1>\n        <Parent />\n      </div>\n    </UserContext.Provider>\n  );\n}\n",
      "autoResize": false,
      "lineHeight": 1.35
    },
    {
      "id": "wy3vdDqgp7-ZKlVO0h2_t",
      "type": "text",
      "x": 586.0367708709616,
      "y": 2892.0144018896362,
      "width": 233.08864678276925,
      "height": 340,
      "angle": 0,
      "strokeColor": "#2f9e44",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0p",
      "roundness": null,
      "seed": 1233409734,
      "version": 253,
      "versionNonce": 443299142,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1737479728275,
      "link": null,
      "locked": false,
      "text": "function Parent() {\n  return <Child />;\n}\nfunction Child() {\n  return <GrandChild />;\n}\nfunction GrandChild() {\n  // 3. Consume the Context value\n  const user = useContext(UserContext);\n\n  return (\n    <div>\n      <h2>User Information:</h2>\n      <p>Name: {user.name}</p>\n      <p>Email: {user.email}</p>\n    </div>\n  );\n}\n\nexport default App;",
      "fontSize": 12.592592592592602,
      "fontFamily": 6,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "function Parent() {\n  return <Child />;\n}\nfunction Child() {\n  return <GrandChild />;\n}\nfunction GrandChild() {\n  // 3. Consume the Context value\n  const user = useContext(UserContext);\n\n  return (\n    <div>\n      <h2>User Information:</h2>\n      <p>Name: {user.name}</p>\n      <p>Email: {user.email}</p>\n    </div>\n  );\n}\n\nexport default App;",
      "autoResize": true,
      "lineHeight": 1.35
    },
    {
      "id": "LEBAN0B49AeSSQeqkrlUN",
      "type": "text",
      "x": 157.4653422995329,
      "y": 3250.5858304610656,
      "width": 182.05987548828125,
      "height": 25,
      "angle": 0,
      "strokeColor": "#e03131",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0r",
      "roundness": null,
      "seed": 656528794,
      "version": 76,
      "versionNonce": 778981402,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1737480302389,
      "link": null,
      "locked": false,
      "text": "State Management",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "State Management",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "-NvgadyX4cl4-kTMFGJAT",
      "type": "text",
      "x": 162.25283113880232,
      "y": 3280.87154474678,
      "width": 1701.9990234375,
      "height": 50,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0t",
      "roundness": null,
      "seed": 282280666,
      "version": 463,
      "versionNonce": 1365636166,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1737480457281,
      "link": null,
      "locked": false,
      "text": "State management in React refers to how the state (data that determines the behavior and rendering of components) is handled, stored, and updated across an application.\nIt lets us distinguish our state logic from the UI components and make rendering more performant",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "State management in React refers to how the state (data that determines the behavior and rendering of components) is handled, stored, and updated across an application.\nIt lets us distinguish our state logic from the UI components and make rendering more performant",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "8Yzii0rwvBTgUbbVBmSIp",
      "type": "text",
      "x": 165.46534229953295,
      "y": 3354.300116175351,
      "width": 57.419952392578125,
      "height": 25,
      "angle": 0,
      "strokeColor": "#1971c2",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0u",
      "roundness": null,
      "seed": 1073402374,
      "version": 11,
      "versionNonce": 95494790,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1737480470390,
      "link": null,
      "locked": false,
      "text": "Recoil",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Recoil",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "GcQuhXJnPFIZ_EKkeACZM",
      "type": "text",
      "x": 167.46534229953295,
      "y": 3388.300116175351,
      "width": 930.9993286132812,
      "height": 100,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#b2f2bb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "b0w",
      "roundness": null,
      "seed": 639745158,
      "version": 114,
      "versionNonce": 932695514,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1737480552478,
      "link": null,
      "locked": false,
      "text": "Recoil is a state manag library that uses the state described as Atoms:\nThe smallest unit of state in Recoil.\nAtoms are like shared pieces of state that can be read from and written to by any component.\nWhen an atom’s value changes, all subscribed components automatically re-rend",
      "fontSize": 20,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Recoil is a state manag library that uses the state described as Atoms:\nThe smallest unit of state in Recoil.\nAtoms are like shared pieces of state that can be read from and written to by any component.\nWhen an atom’s value changes, all subscribed components automatically re-rend",
      "autoResize": true,
      "lineHeight": 1.25
    }
  ],
  "appState": {
    "gridSize": 20,
    "gridStep": 5,
    "gridModeEnabled": false,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}